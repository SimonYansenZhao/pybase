# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - bash: echo "##vso[task.prependpath]/usr/share/miniconda/bin"
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: Add conda to PATH (Linux)

  - bash: |
      conda create -q -n codebase python=$(python.version) -y
      conda env update -q -n codebase -f conda.yaml
    displayName: 'Conda install dependencies'

  - bash: |
      source activate codebase
      python test/unittest_fixtures.py --junitxml=junit/test-unitttest.xml
      pytest test/pytest* -m "not system" --junitxml=junit/test-pytest.xml
    displayName: 'tests'

  - bash: |
      source activate codebase
      pytest python --doctest-modules --continue-on-collection-errors --junitxml=junit/test-doctest.xml
    displayName: 'doctests'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
